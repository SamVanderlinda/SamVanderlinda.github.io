{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","url","blob","_onRecordingComplete","blobToBuffer","err","buffer","console","error","log","window","URL","revokeObjectURL","setState","createObjectURL","_onRecordingError","this","style","display","flexDirection","justifyContent","alignItems","textAlign","minHeight","onRecordingComplete","onRecordingError","margin","src","controls","minWidth","axios","post","rawAudioData","random","then","response","catch","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSA+BqBA,E,4MACnBC,MAAQ,CACNC,IAAK,GACLC,KAAM,I,EAwERC,qBAAuB,SAACD,GACtBE,IAAaF,GAAM,SAACG,EAAKC,GACnBD,EACFE,QAAQC,MAAMH,IAIhBE,QAAQE,IAAI,YAAaP,GAErB,EAAKF,MAAMC,KACbS,OAAOC,IAAIC,gBAAgB,EAAKZ,MAAMC,KAmBxC,EAAKY,SAAS,CACZZ,IAAKS,OAAOC,IAAIG,gBAAgBZ,GAChCA,KAAMA,S,EAKZa,kBAAoB,SAACV,GACnBE,QAAQE,IAAI,kBAAmBJ,GAE3B,EAAKL,MAAMC,KACbS,OAAOC,IAAIC,gBAAgB,EAAKZ,MAAMC,KAGxC,EAAKY,SAAS,CAAEZ,IAAK,KAAMC,KAAM,M,4CAhHnC,WACE,MAGIc,KAAKhB,MAFPC,EADF,EACEA,IADF,EAEEC,KAGF,OACE,8BAcE,qBACEe,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,UAAW,SACXC,UAAW,SAPf,SAUE,gCACE,cAAC,IAAD,CACEC,oBAAqBR,KAAKb,qBAC1BsB,iBAAkBT,KAAKD,kBACvBE,MAAO,CACLS,OAAQ,YAIZ,mEAICzB,GACC,8BACE,cAAC,IAAD,CACE0B,IAAK1B,EACL2B,UAAQ,EACRX,MAAO,CACLY,SAAU,sB,iCAiE5B,WACIC,IAAMC,KAAK,+CAAgD,CACzDC,aAAchB,KAAKhB,MAAMC,IACzBgC,OAAQ,WAETC,MAAK,SAAUC,GACd5B,QAAQE,IAAI0B,MAEbC,OAAM,SAAU5B,GACfD,QAAQE,IAAID,U,GAlIa6B,aCnBlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9a239955.chunk.js","sourcesContent":["// import React, { Component } from 'react';\r\n// import YouTube from 'react-youtube';\r\n\r\n// export default class App extends Component {\r\n//   render() {\r\n//     const opts = {\r\n//       height: '390',\r\n//       width: '640',\r\n//       playerVars: {\r\n//         // https://developers.google.com/youtube/player_parameters\r\n//         autoplay: 1,\r\n//       },\r\n//     };\r\n\r\n//     return <YouTube videoId=\"2g811Eo7K8U\" opts={opts} />;\r\n//   }\r\n\r\n//   _onReady(event) {\r\n//     // access to player in all event handlers via event.target\r\n//     event.target.pauseVideo();\r\n//   }\r\n// }\r\n\r\nimport React, { Component } from 'react'\r\nimport axios from \"axios\"\r\nimport Recorder from 'react-mp3-recorder'\r\nimport ReactAudioPlayer from 'react-audio-player'\r\n\r\nimport blobToBuffer from 'blob-to-buffer'\r\n// import ribbon from './ribbon.png'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    url: '',\r\n    blob: ''\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      url,\r\n      blob\r\n    } = this.state\r\n\r\n    return (\r\n      <div>\r\n        {/* <a href='https://github.com/transitive-bullshit/react-mp3-recorder'>\r\n          <img\r\n            src={ribbon}\r\n            alt='Fork me on GitHub'\r\n            style={{\r\n              position: 'absolute',\r\n              top: 0,\r\n              right: 0,\r\n              border: 0\r\n            }}\r\n          />\r\n        </a> */}\r\n\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            minHeight: '100vh'\r\n          }}\r\n        >\r\n          <div>\r\n            <Recorder\r\n              onRecordingComplete={this._onRecordingComplete}\r\n              onRecordingError={this._onRecordingError}\r\n              style={{\r\n                margin: '0 auto'\r\n              }}\r\n            />\r\n\r\n            <p>\r\n              Click and hold to start recording.\r\n            </p>\r\n\r\n            {url && (\r\n              <div>\r\n                <ReactAudioPlayer\r\n                  src={url}\r\n                  controls\r\n                  style={{\r\n                    minWidth: '500px'\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // get_video = () => {\r\n  //   const YOUR_API_KEY = \"AIzaSyBqaWB1aHNyOlzNZ1o1VlQSzx1434urZfA\";\r\n  //   const url = \"https://www.googleapis.com/youtube/v3/videos?id=7lCDEYXw3mM&key=${YOUR_API_KEY}&part=snippet,contentDetails,statistics,status\";\r\n  //   let response = await fetch(url);\r\n  //   const body = await response.json();\r\n  // }\r\n\r\n  _onRecordingComplete = (blob) => {\r\n    blobToBuffer(blob, (err, buffer) => {\r\n      if (err) {\r\n        console.error(err)\r\n        return\r\n      }\r\n\r\n      console.log('recording', blob)\r\n\r\n      if (this.state.url) {\r\n        window.URL.revokeObjectURL(this.state.url)\r\n      }\r\n\r\n      // const config = { responseType: 'blob' };\r\n\r\n      // const blobFile = new File([this.state.blob], 'blob_file');\r\n      // var text = await this.state.blob.text();\r\n      // console.log(\"request firesd \", text);\r\n      // axios.post('http://483f-34-74-207-163.ngrok.io/recommend', {\r\n      //   rawAudioData: text,\r\n      //   random: \"poopoo\"\r\n      // })\r\n      // .then(function (response) {\r\n      //   console.log(response);\r\n      // })\r\n      // .catch(function (error) {\r\n      //   console.log(error);\r\n      // });\r\n\r\n      this.setState({\r\n        url: window.URL.createObjectURL(blob),\r\n        blob: blob\r\n      })\r\n    })\r\n  }\r\n\r\n  _onRecordingError = (err) => {\r\n    console.log('error recording', err)\r\n\r\n    if (this.state.url) {\r\n      window.URL.revokeObjectURL(this.state.url)\r\n    }\r\n\r\n    this.setState({ url: null, blob: '' })\r\n  }\r\n\r\n  componentWillUpdate() {\r\n      axios.post('http://483f-34-74-207-163.ngrok.io/recommend', {\r\n        rawAudioData: this.state.url,\r\n        random: \"poopoo\"\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}